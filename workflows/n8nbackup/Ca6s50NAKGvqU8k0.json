{
  "active": true,
  "connections": {
    "On clicking 'execute'": {
      "main": [
        [
          {
            "node": "n8n",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "n8n": {
      "main": [
        [
          {
            "node": "Limit1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge Items": {
      "main": [
        [
          {
            "node": "isDiffOrNew",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "isDiffOrNew": {
      "main": [
        [
          {
            "node": "Check Status",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check Status": {
      "main": [
        [
          {
            "node": "Same file - Do nothing",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "File is different",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "File is new",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Same file - Do nothing": {
      "main": [
        [
          {
            "node": "Return",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "File is different": {
      "main": [
        [
          {
            "node": "Edit existing file",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "File is new": {
      "main": [
        [
          {
            "node": "Create new file",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Create new file": {
      "main": [
        [
          {
            "node": "Return",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit existing file": {
      "main": [
        [
          {
            "node": "Return",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items": {
      "main": [
        [
          {
            "node": "Send Analysis",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Execution Data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Schedule Trigger": {
      "main": [
        [
          {
            "node": "n8n",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get file data": {
      "main": [
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Execute Workflow Trigger": {
      "main": [
        [
          {
            "node": "tag?",
            "type": "main",
            "index": 0
          },
          {
            "node": "Merge Items",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Execute Workflow": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Execution Data": {
      "main": [
        [
          {
            "node": "Execute Workflow",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "tag?": {
      "main": [
        [
          {
            "node": "/",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Globals",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "/": {
      "main": [
        [
          {
            "node": "Globals",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Globals": {
      "main": [
        [
          {
            "node": "Get file data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code": {
      "main": [
        [
          {
            "node": "Merge Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If": {
      "main": [
        [
          {
            "node": "Code",
            "type": "main",
            "index": 0
          }
        ],
        []
      ]
    },
    "Limit1": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2025-06-06T02:53:37.125Z",
  "id": "Ca6s50NAKGvqU8k0",
  "isArchived": false,
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "name": "備份Workflow",
  "nodes": [
    {
      "parameters": {},
      "id": "ce3a9161-5017-4776-9ddb-bd58dbf76388",
      "name": "On clicking 'execute'",
      "type": "n8n-nodes-base.manualTrigger",
      "position": [
        160,
        615
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "filters": {},
        "requestOptions": {}
      },
      "id": "6ed39ed4-f295-495e-9857-3cb16be6bd36",
      "name": "n8n",
      "type": "n8n-nodes-base.n8n",
      "position": [
        380,
        740
      ],
      "typeVersion": 1,
      "credentials": {
        "n8nApi": {
          "id": "LwQjyPyVq0xEYmRv",
          "name": "n8n account"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "8d513345-6484-431f-afb7-7cf045c90f4f",
              "name": "Done",
              "type": "boolean",
              "value": true
            }
          ]
        },
        "options": {}
      },
      "id": "a3053be1-c27e-426b-b372-37b190ed7371",
      "name": "Return",
      "type": "n8n-nodes-base.set",
      "position": [
        2800,
        1275
      ],
      "typeVersion": 3.3
    },
    {
      "parameters": {},
      "id": "8f9d8741-32c7-4ae5-85e1-387f1a00ac86",
      "name": "Merge Items",
      "type": "n8n-nodes-base.merge",
      "position": [
        1700,
        1275
      ],
      "typeVersion": 2
    },
    {
      "parameters": {
        "jsCode": "const orderJsonKeys = (jsonObj) => {\n  const ordered = {};\n  Object.keys(jsonObj).sort().forEach(key => {\n    ordered[key] = jsonObj[key];\n  });\n  return ordered;\n}\n\n// Check if file returned with content\nif (Object.keys($input.all()[0].json).includes(\"nodes\")) {\n  const origWorkflow = $input.all()[0].json;\n  const n8nWorkflow = $input.all()[1].json;\n  \n  // Order JSON objects\n  const orderedOriginal = orderJsonKeys(origWorkflow);\n  const orderedActual = orderJsonKeys(n8nWorkflow);\n\n  // Determine difference\n  if (JSON.stringify(orderedOriginal) === JSON.stringify(orderedActual)) {\n    $input.all()[0].json.github_status = \"same\";\n  } else {\n    $input.all()[0].json.github_status = \"different\";\n    $input.all()[0].json.n8n_data_stringy = JSON.stringify(orderedActual, null, 2);\n  }\n  $input.all()[0].json.content_decoded = orderedOriginal;\n\n} else {\n  // Order JSON object\n  const n8nWorkflow = $input.all()[1].json;\n  const orderedActual = orderJsonKeys(n8nWorkflow);\n  \n  // Proper formatting\n  $input.all()[0].json.github_status = \"new\";\n  $input.all()[0].json.n8n_data_stringy = JSON.stringify(orderedActual, null, 2);\n}\n\n// Return items\nreturn $input.all();"
      },
      "id": "24033ea1-da2c-461e-884e-954101e7b980",
      "name": "isDiffOrNew",
      "type": "n8n-nodes-base.code",
      "position": [
        1920,
        1275
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "dataType": "string",
        "value1": "={{$json.github_status}}",
        "rules": {
          "rules": [
            {
              "value2": "same"
            },
            {
              "value2": "different",
              "output": 1
            },
            {
              "value2": "new",
              "output": 2
            }
          ]
        }
      },
      "id": "d01319f1-11a7-4580-8ae4-a7efd28f8f6f",
      "name": "Check Status",
      "type": "n8n-nodes-base.switch",
      "position": [
        2140,
        1254
      ],
      "typeVersion": 1
    },
    {
      "parameters": {},
      "id": "b8d06c91-8c4c-4811-96d4-164741f2b6c4",
      "name": "Same file - Do nothing",
      "type": "n8n-nodes-base.noOp",
      "position": [
        2580,
        1075
      ],
      "typeVersion": 1
    },
    {
      "parameters": {},
      "id": "bb1c37cd-47e4-456b-aaa2-e817c1a47af4",
      "name": "File is different",
      "type": "n8n-nodes-base.noOp",
      "position": [
        2360,
        1275
      ],
      "typeVersion": 1
    },
    {
      "parameters": {},
      "id": "1e7118e5-e323-44ed-a816-fd8c40b1d3e9",
      "name": "File is new",
      "type": "n8n-nodes-base.noOp",
      "position": [
        2360,
        1475
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "resource": "file",
        "owner": {
          "__rl": true,
          "mode": "name",
          "value": "={{ $('Globals').item.json.repo.owner }}"
        },
        "repository": {
          "__rl": true,
          "mode": "name",
          "value": "={{ $('Globals').item.json.repo.name }}"
        },
        "filePath": "={{ $('Globals').item.json.repo.path }}{{$('Execute Workflow Trigger').first().json.id}}.json",
        "fileContent": "={{$('isDiffOrNew').item.json[\"n8n_data_stringy\"]}}",
        "commitMessage": "={{$('Execute Workflow Trigger').first().json.name}} ({{$json.github_status}})"
      },
      "id": "d867d9ac-4dc2-4d05-b7d1-d990fe0ac035",
      "name": "Create new file",
      "type": "n8n-nodes-base.github",
      "position": [
        2580,
        1475
      ],
      "typeVersion": 1,
      "webhookId": "41a8051d-056d-4b9b-b9d0-7a995e54987d",
      "credentials": {
        "githubApi": {
          "id": "WjiS6Oe97EVeWLGg",
          "name": "GitHub account"
        }
      }
    },
    {
      "parameters": {
        "resource": "file",
        "operation": "edit",
        "owner": {
          "__rl": true,
          "mode": "name",
          "value": "={{ $('Globals').item.json.repo.owner }}"
        },
        "repository": {
          "__rl": true,
          "mode": "name",
          "value": "={{ $('Globals').item.json.repo.name }}"
        },
        "filePath": "={{ $('Globals').item.json.repo.path }}{{$('Execute Workflow Trigger').first().json.id}}.json",
        "fileContent": "={{$('isDiffOrNew').item.json[\"n8n_data_stringy\"]}}",
        "commitMessage": "={{$('Execute Workflow Trigger').first().json.name}} ({{$json.github_status}})"
      },
      "id": "b53c52aa-0589-431a-95e3-88547eb78fde",
      "name": "Edit existing file",
      "type": "n8n-nodes-base.github",
      "position": [
        2580,
        1275
      ],
      "typeVersion": 1,
      "webhookId": "4af90c9e-2686-457e-95ad-970a9f3d8c6b",
      "credentials": {
        "githubApi": {
          "id": "WjiS6Oe97EVeWLGg",
          "name": "GitHub account"
        }
      }
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "bac56ad0-3734-4685-b70a-adb4077375bf",
      "name": "Loop Over Items",
      "type": "n8n-nodes-base.splitInBatches",
      "position": [
        820,
        740
      ],
      "typeVersion": 3
    },
    {
      "parameters": {
        "rule": {
          "interval": [
            {}
          ]
        }
      },
      "id": "c240118d-9a4a-4a9f-86fe-9e122172d770",
      "name": "Schedule Trigger",
      "type": "n8n-nodes-base.scheduleTrigger",
      "position": [
        160,
        815
      ],
      "typeVersion": 1.2
    },
    {
      "parameters": {
        "resource": "file",
        "operation": "get",
        "owner": {
          "__rl": true,
          "value": "={{ $json.repo.owner }}",
          "mode": "name"
        },
        "repository": {
          "__rl": true,
          "value": "={{ $json.repo.name }}",
          "mode": "name"
        },
        "filePath": "={{ $json.repo.path }}{{ $('Execute Workflow Trigger').item.json.id }}.json",
        "additionalParameters": {}
      },
      "id": "ac881e6c-3211-4b33-9941-fd02bf6fdc7c",
      "name": "Get file data",
      "type": "n8n-nodes-base.github",
      "position": [
        1040,
        1200
      ],
      "typeVersion": 1,
      "alwaysOutputData": true,
      "webhookId": "baa4e326-7b3d-44ed-904d-8db19610f446",
      "credentials": {
        "githubApi": {
          "id": "WjiS6Oe97EVeWLGg",
          "name": "GitHub account"
        }
      },
      "continueOnFail": true
    },
    {
      "parameters": {
        "inputSource": "passthrough"
      },
      "id": "3242df84-156b-4543-b617-e02ff5d40566",
      "name": "Execute Workflow Trigger",
      "type": "n8n-nodes-base.executeWorkflowTrigger",
      "position": [
        160,
        1275
      ],
      "typeVersion": 1.1
    },
    {
      "parameters": {
        "workflowId": {
          "__rl": true,
          "mode": "id",
          "value": "={{ $workflow.id }}"
        },
        "workflowInputs": {
          "value": {},
          "schema": [],
          "mappingMode": "defineBelow",
          "matchingColumns": [],
          "attemptToConvertTypes": false,
          "convertFieldsToString": true
        },
        "mode": "each",
        "options": {}
      },
      "id": "77424334-e87e-4651-92b8-b6ddac6df289",
      "name": "Execute Workflow",
      "type": "n8n-nodes-base.executeWorkflow",
      "position": [
        1260,
        815
      ],
      "typeVersion": 1.2
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.executionData",
      "typeVersion": 1,
      "position": [
        1040,
        740
      ],
      "id": "15fd2c61-39df-4f74-ad56-3b6b186c3b15",
      "name": "Execution Data"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "12cad226-e091-4bbb-aed9-a8e01311772c",
              "name": "tags[0].name",
              "type": "string",
              "value": "={{ $('Execute Workflow Trigger').item.json.tags[0].name }}/"
            }
          ]
        },
        "options": {}
      },
      "id": "05af55f5-1544-4d25-a2d0-fd3da9d96ba2",
      "name": "/",
      "type": "n8n-nodes-base.set",
      "position": [
        600,
        1125
      ],
      "typeVersion": 3.4
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "version": 2,
                  "leftValue": "",
                  "caseSensitive": true,
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "operator": {
                      "type": "object",
                      "operation": "exists",
                      "singleValue": true
                    },
                    "leftValue": "={{ $json.tags[0] }}",
                    "rightValue": "",
                    "id": "9a1e13e9-5e41-45c7-816b-d8f484d34b6f"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "tag"
            },
            {
              "conditions": {
                "options": {
                  "version": 2,
                  "leftValue": "",
                  "caseSensitive": true,
                  "typeValidation": "strict"
                },
                "combinator": "and",
                "conditions": [
                  {
                    "id": "2656fbe3-fe35-4770-9c03-9a455ec618e4",
                    "operator": {
                      "type": "object",
                      "operation": "notExists",
                      "singleValue": true
                    },
                    "leftValue": "={{ $json.tags[0] }}",
                    "rightValue": ""
                  }
                ]
              },
              "renameOutput": true,
              "outputKey": "none"
            }
          ]
        },
        "options": {}
      },
      "id": "7061c511-4475-4212-8ead-10bd32e44e8f",
      "name": "tag?",
      "type": "n8n-nodes-base.switch",
      "position": [
        380,
        1200
      ],
      "typeVersion": 3.2
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "6cf546c5-5737-4dbd-851b-17d68e0a3780",
              "name": "repo.owner",
              "type": "string",
              "value": "myrest"
            },
            {
              "id": "452efa28-2dc6-4ea3-a7a2-c35d100d0382",
              "name": "repo.name",
              "type": "string",
              "value": "n8n-backup"
            },
            {
              "id": "81c4dc54-86bf-4432-a23f-22c7ea831e74",
              "name": "repo.path",
              "type": "string",
              "value": "=workflows/{{ $json.tags[0].name }}"
            }
          ]
        },
        "options": {}
      },
      "id": "b7f138ba-6706-4039-b216-e4b75e10f0fa",
      "name": "Globals",
      "type": "n8n-nodes-base.set",
      "position": [
        820,
        1200
      ],
      "typeVersion": 3.4
    },
    {
      "parameters": {
        "chatId": "=5513588652",
        "text": "備份完成",
        "additionalFields": {
          "appendAttribution": false
        }
      },
      "id": "e2721343-04e0-49a0-9594-14e15f4a02a1",
      "name": "Send Analysis",
      "type": "n8n-nodes-base.telegram",
      "position": [
        1040,
        540
      ],
      "webhookId": "8f97947a-ddce-4176-b5ac-53d5531ce9ba",
      "typeVersion": 1.2,
      "executeOnce": true,
      "credentials": {
        "telegramApi": {
          "id": "0vSzsoInEfTGHS1W",
          "name": "Telegram account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "const binaryDataObject = $input.first().binary.data;\nconst binaryBuffer = await this.helpers.getBinaryDataBuffer(0, 'data');\nconst base64String = binaryBuffer.toString('base64');\nconst decodedBuffer = Buffer.from(base64String, 'base64');\njsonString = decodedBuffer.toString('utf8');\njsonObject = JSON.parse(jsonString);\nreturn jsonObject"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1480,
        1200
      ],
      "id": "6f2fae5c-c997-4cbd-bb64-6000f6303d44",
      "name": "Code"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "3fd47820-bbd7-432d-b714-c8ca00018002",
              "leftValue": "={{ $json.error }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "notExists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        1260,
        1200
      ],
      "id": "87785794-ffe2-4868-b2ab-7a6cf98ba241",
      "name": "If"
    },
    {
      "parameters": {
        "maxItems": 100
      },
      "type": "n8n-nodes-base.limit",
      "typeVersion": 1,
      "position": [
        600,
        740
      ],
      "id": "00018b81-b96b-4094-bf16-081ddb6a8496",
      "name": "Limit1"
    }
  ],
  "pinData": {
    "Execute Workflow Trigger": [
      {
        "json": {
          "createdAt": "2025-06-06T02:53:37.125Z",
          "updatedAt": "2025-06-06T08:11:20.000Z",
          "id": "Ca6s50NAKGvqU8k0",
          "name": "備份Workflow",
          "active": true,
          "nodes": [
            {
              "parameters": {},
              "id": "ce3a9161-5017-4776-9ddb-bd58dbf76388",
              "name": "On clicking 'execute'",
              "type": "n8n-nodes-base.manualTrigger",
              "position": [
                160,
                615
              ],
              "typeVersion": 1
            },
            {
              "parameters": {
                "filters": {},
                "requestOptions": {}
              },
              "id": "6ed39ed4-f295-495e-9857-3cb16be6bd36",
              "name": "n8n",
              "type": "n8n-nodes-base.n8n",
              "position": [
                380,
                740
              ],
              "typeVersion": 1,
              "credentials": {
                "n8nApi": {
                  "id": "LwQjyPyVq0xEYmRv",
                  "name": "n8n account"
                }
              }
            },
            {
              "parameters": {
                "assignments": {
                  "assignments": [
                    {
                      "id": "8d513345-6484-431f-afb7-7cf045c90f4f",
                      "name": "Done",
                      "type": "boolean",
                      "value": true
                    }
                  ]
                },
                "options": {}
              },
              "id": "a3053be1-c27e-426b-b372-37b190ed7371",
              "name": "Return",
              "type": "n8n-nodes-base.set",
              "position": [
                3020,
                1275
              ],
              "typeVersion": 3.3
            },
            {
              "parameters": {},
              "id": "8f9d8741-32c7-4ae5-85e1-387f1a00ac86",
              "name": "Merge Items",
              "type": "n8n-nodes-base.merge",
              "position": [
                1920,
                1275
              ],
              "typeVersion": 2
            },
            {
              "parameters": {
                "jsCode": "const orderJsonKeys = (jsonObj) => {\n  const ordered = {};\n  Object.keys(jsonObj).sort().forEach(key => {\n    ordered[key] = jsonObj[key];\n  });\n  return ordered;\n}\n\n// Check if file returned with content\nif (Object.keys($input.all()[0].json).includes(\"nodes\")) {\n  const origWorkflow = $input.all()[0].json;\n  const n8nWorkflow = $input.all()[1].json;\n  \n  // Order JSON objects\n  const orderedOriginal = orderJsonKeys(origWorkflow);\n  const orderedActual = orderJsonKeys(n8nWorkflow);\n\n  // Determine difference\n  if (JSON.stringify(orderedOriginal) === JSON.stringify(orderedActual)) {\n    $input.all()[0].json.github_status = \"same\";\n  } else {\n    $input.all()[0].json.github_status = \"different\";\n    $input.all()[0].json.n8n_data_stringy = JSON.stringify(orderedActual, null, 2);\n  }\n  $input.all()[0].json.content_decoded = orderedOriginal;\n\n} else {\n  // Order JSON object\n  const n8nWorkflow = $input.all()[1].json;\n  const orderedActual = orderJsonKeys(n8nWorkflow);\n  \n  // Proper formatting\n  $input.all()[0].json.github_status = \"new\";\n  $input.all()[0].json.n8n_data_stringy = JSON.stringify(orderedActual, null, 2);\n}\n\n// Return items\nreturn $input.all();"
              },
              "id": "24033ea1-da2c-461e-884e-954101e7b980",
              "name": "isDiffOrNew",
              "type": "n8n-nodes-base.code",
              "position": [
                2140,
                1275
              ],
              "typeVersion": 1
            },
            {
              "parameters": {
                "dataType": "string",
                "value1": "={{$json.github_status}}",
                "rules": {
                  "rules": [
                    {
                      "value2": "same"
                    },
                    {
                      "value2": "different",
                      "output": 1
                    },
                    {
                      "value2": "new",
                      "output": 2
                    }
                  ]
                }
              },
              "id": "d01319f1-11a7-4580-8ae4-a7efd28f8f6f",
              "name": "Check Status",
              "type": "n8n-nodes-base.switch",
              "position": [
                2360,
                1254
              ],
              "typeVersion": 1
            },
            {
              "parameters": {},
              "id": "b8d06c91-8c4c-4811-96d4-164741f2b6c4",
              "name": "Same file - Do nothing",
              "type": "n8n-nodes-base.noOp",
              "position": [
                2800,
                1075
              ],
              "typeVersion": 1
            },
            {
              "parameters": {},
              "id": "bb1c37cd-47e4-456b-aaa2-e817c1a47af4",
              "name": "File is different",
              "type": "n8n-nodes-base.noOp",
              "position": [
                2580,
                1275
              ],
              "typeVersion": 1
            },
            {
              "parameters": {},
              "id": "1e7118e5-e323-44ed-a816-fd8c40b1d3e9",
              "name": "File is new",
              "type": "n8n-nodes-base.noOp",
              "position": [
                2580,
                1475
              ],
              "typeVersion": 1
            },
            {
              "parameters": {
                "resource": "file",
                "owner": {
                  "__rl": true,
                  "mode": "name",
                  "value": "={{ $('Globals').item.json.repo.owner }}"
                },
                "repository": {
                  "__rl": true,
                  "mode": "name",
                  "value": "={{ $('Globals').item.json.repo.name }}"
                },
                "filePath": "={{ $('Globals').item.json.repo.path }}{{$('Execute Workflow Trigger').first().json.id}}.json",
                "fileContent": "={{$('isDiffOrNew').item.json[\"n8n_data_stringy\"]}}",
                "commitMessage": "={{$('Execute Workflow Trigger').first().json.name}} ({{$json.github_status}})"
              },
              "id": "d867d9ac-4dc2-4d05-b7d1-d990fe0ac035",
              "name": "Create new file",
              "type": "n8n-nodes-base.github",
              "position": [
                2800,
                1475
              ],
              "typeVersion": 1,
              "webhookId": "41a8051d-056d-4b9b-b9d0-7a995e54987d",
              "credentials": {
                "githubApi": {
                  "id": "WjiS6Oe97EVeWLGg",
                  "name": "GitHub account"
                }
              }
            },
            {
              "parameters": {
                "resource": "file",
                "operation": "edit",
                "owner": {
                  "__rl": true,
                  "mode": "name",
                  "value": "={{ $('Globals').item.json.repo.owner }}"
                },
                "repository": {
                  "__rl": true,
                  "mode": "name",
                  "value": "={{ $('Globals').item.json.repo.name }}"
                },
                "filePath": "={{ $('Globals').item.json.repo.path }}{{$('Execute Workflow Trigger').first().json.id}}.json",
                "fileContent": "={{$('isDiffOrNew').item.json[\"n8n_data_stringy\"]}}",
                "commitMessage": "={{$('Execute Workflow Trigger').first().json.name}} ({{$json.github_status}})"
              },
              "id": "b53c52aa-0589-431a-95e3-88547eb78fde",
              "name": "Edit existing file",
              "type": "n8n-nodes-base.github",
              "position": [
                2800,
                1275
              ],
              "typeVersion": 1,
              "webhookId": "4af90c9e-2686-457e-95ad-970a9f3d8c6b",
              "credentials": {
                "githubApi": {
                  "id": "WjiS6Oe97EVeWLGg",
                  "name": "GitHub account"
                }
              }
            },
            {
              "parameters": {
                "options": {}
              },
              "id": "bac56ad0-3734-4685-b70a-adb4077375bf",
              "name": "Loop Over Items",
              "type": "n8n-nodes-base.splitInBatches",
              "position": [
                820,
                740
              ],
              "typeVersion": 3
            },
            {
              "parameters": {
                "rule": {
                  "interval": [
                    {}
                  ]
                }
              },
              "id": "c240118d-9a4a-4a9f-86fe-9e122172d770",
              "name": "Schedule Trigger",
              "type": "n8n-nodes-base.scheduleTrigger",
              "position": [
                160,
                815
              ],
              "typeVersion": 1.2
            },
            {
              "parameters": {
                "resource": "file",
                "operation": "get",
                "owner": {
                  "__rl": true,
                  "value": "={{ $json.repo.owner }}",
                  "mode": "name"
                },
                "repository": {
                  "__rl": true,
                  "value": "={{ $json.repo.name }}",
                  "mode": "name"
                },
                "filePath": "={{ $json.repo.path }}{{ $('Execute Workflow Trigger').item.json.id }}.json",
                "additionalParameters": {}
              },
              "id": "ac881e6c-3211-4b33-9941-fd02bf6fdc7c",
              "name": "Get file data",
              "type": "n8n-nodes-base.github",
              "position": [
                1040,
                1200
              ],
              "typeVersion": 1,
              "alwaysOutputData": true,
              "webhookId": "baa4e326-7b3d-44ed-904d-8db19610f446",
              "credentials": {
                "githubApi": {
                  "id": "WjiS6Oe97EVeWLGg",
                  "name": "GitHub account"
                }
              },
              "continueOnFail": true
            },
            {
              "parameters": {
                "inputSource": "passthrough"
              },
              "id": "3242df84-156b-4543-b617-e02ff5d40566",
              "name": "Execute Workflow Trigger",
              "type": "n8n-nodes-base.executeWorkflowTrigger",
              "position": [
                160,
                1275
              ],
              "typeVersion": 1.1
            },
            {
              "parameters": {
                "workflowId": {
                  "__rl": true,
                  "mode": "id",
                  "value": "={{ $workflow.id }}"
                },
                "workflowInputs": {
                  "value": {},
                  "schema": [],
                  "mappingMode": "defineBelow",
                  "matchingColumns": [],
                  "attemptToConvertTypes": false,
                  "convertFieldsToString": true
                },
                "mode": "each",
                "options": {}
              },
              "id": "77424334-e87e-4651-92b8-b6ddac6df289",
              "name": "Execute Workflow",
              "type": "n8n-nodes-base.executeWorkflow",
              "position": [
                1260,
                815
              ],
              "typeVersion": 1.2
            },
            {
              "parameters": {},
              "type": "n8n-nodes-base.executionData",
              "typeVersion": 1,
              "position": [
                1040,
                740
              ],
              "id": "15fd2c61-39df-4f74-ad56-3b6b186c3b15",
              "name": "Execution Data"
            },
            {
              "parameters": {
                "assignments": {
                  "assignments": [
                    {
                      "id": "12cad226-e091-4bbb-aed9-a8e01311772c",
                      "name": "tags[0].name",
                      "type": "string",
                      "value": "={{ $('Execute Workflow Trigger').item.json.tags[0].name }}/"
                    }
                  ]
                },
                "options": {}
              },
              "id": "05af55f5-1544-4d25-a2d0-fd3da9d96ba2",
              "name": "/",
              "type": "n8n-nodes-base.set",
              "position": [
                600,
                1125
              ],
              "typeVersion": 3.4
            },
            {
              "parameters": {
                "rules": {
                  "values": [
                    {
                      "conditions": {
                        "options": {
                          "version": 2,
                          "leftValue": "",
                          "caseSensitive": true,
                          "typeValidation": "strict"
                        },
                        "conditions": [
                          {
                            "operator": {
                              "type": "object",
                              "operation": "exists",
                              "singleValue": true
                            },
                            "leftValue": "={{ $json.tags[0] }}",
                            "rightValue": "",
                            "id": "9a1e13e9-5e41-45c7-816b-d8f484d34b6f"
                          }
                        ],
                        "combinator": "and"
                      },
                      "renameOutput": true,
                      "outputKey": "tag"
                    },
                    {
                      "conditions": {
                        "options": {
                          "version": 2,
                          "leftValue": "",
                          "caseSensitive": true,
                          "typeValidation": "strict"
                        },
                        "combinator": "and",
                        "conditions": [
                          {
                            "id": "2656fbe3-fe35-4770-9c03-9a455ec618e4",
                            "operator": {
                              "type": "object",
                              "operation": "notExists",
                              "singleValue": true
                            },
                            "leftValue": "={{ $json.tags[0] }}",
                            "rightValue": ""
                          }
                        ]
                      },
                      "renameOutput": true,
                      "outputKey": "none"
                    }
                  ]
                },
                "options": {}
              },
              "id": "7061c511-4475-4212-8ead-10bd32e44e8f",
              "name": "tag?",
              "type": "n8n-nodes-base.switch",
              "position": [
                380,
                1200
              ],
              "typeVersion": 3.2
            },
            {
              "parameters": {
                "assignments": {
                  "assignments": [
                    {
                      "id": "6cf546c5-5737-4dbd-851b-17d68e0a3780",
                      "name": "repo.owner",
                      "type": "string",
                      "value": "myrest"
                    },
                    {
                      "id": "452efa28-2dc6-4ea3-a7a2-c35d100d0382",
                      "name": "repo.name",
                      "type": "string",
                      "value": "n8n-backup"
                    },
                    {
                      "id": "81c4dc54-86bf-4432-a23f-22c7ea831e74",
                      "name": "repo.path",
                      "type": "string",
                      "value": "=workflows/{{ $json.tags[0].name }}"
                    }
                  ]
                },
                "options": {}
              },
              "id": "b7f138ba-6706-4039-b216-e4b75e10f0fa",
              "name": "Globals",
              "type": "n8n-nodes-base.set",
              "position": [
                820,
                1200
              ],
              "typeVersion": 3.4
            },
            {
              "parameters": {
                "chatId": "=5513588652",
                "text": "備份完成",
                "additionalFields": {
                  "appendAttribution": false
                }
              },
              "id": "e2721343-04e0-49a0-9594-14e15f4a02a1",
              "name": "Send Analysis",
              "type": "n8n-nodes-base.telegram",
              "position": [
                1040,
                540
              ],
              "webhookId": "8f97947a-ddce-4176-b5ac-53d5531ce9ba",
              "typeVersion": 1.2,
              "executeOnce": true,
              "credentials": {
                "telegramApi": {
                  "id": "0vSzsoInEfTGHS1W",
                  "name": "Telegram account"
                }
              }
            },
            {
              "parameters": {
                "jsCode": "const decodedBuffer = Buffer.from($input.first().json.data, 'base64');\njsonString = decodedBuffer.toString('utf8');\njsonObject = JSON.parse(jsonString);\nreturn jsonObject"
              },
              "type": "n8n-nodes-base.code",
              "typeVersion": 2,
              "position": [
                1700,
                1125
              ],
              "id": "6f2fae5c-c997-4cbd-bb64-6000f6303d44",
              "name": "Code"
            },
            {
              "parameters": {
                "assignments": {
                  "assignments": [
                    {
                      "id": "b35a1b71-c685-4f86-9a2f-a52ad93650a8",
                      "name": "data",
                      "value": "={{$input.first().binary.data.data}}",
                      "type": "string"
                    }
                  ]
                },
                "options": {}
              },
              "type": "n8n-nodes-base.set",
              "typeVersion": 3.4,
              "position": [
                1480,
                1125
              ],
              "id": "a8f783d7-3d7b-4551-a214-f3492b7b1834",
              "name": "Get Base64"
            },
            {
              "parameters": {
                "conditions": {
                  "options": {
                    "caseSensitive": true,
                    "leftValue": "",
                    "typeValidation": "strict",
                    "version": 2
                  },
                  "conditions": [
                    {
                      "id": "3fd47820-bbd7-432d-b714-c8ca00018002",
                      "leftValue": "={{ $json.error }}",
                      "rightValue": "",
                      "operator": {
                        "type": "string",
                        "operation": "notExists",
                        "singleValue": true
                      }
                    }
                  ],
                  "combinator": "and"
                },
                "options": {}
              },
              "type": "n8n-nodes-base.if",
              "typeVersion": 2.2,
              "position": [
                1260,
                1200
              ],
              "id": "87785794-ffe2-4868-b2ab-7a6cf98ba241",
              "name": "If"
            },
            {
              "parameters": {
                "maxItems": 100
              },
              "type": "n8n-nodes-base.limit",
              "typeVersion": 1,
              "position": [
                600,
                740
              ],
              "id": "00018b81-b96b-4094-bf16-081ddb6a8496",
              "name": "Limit1"
            }
          ],
          "connections": {
            "On clicking 'execute'": {
              "main": [
                [
                  {
                    "node": "n8n",
                    "type": "main",
                    "index": 0
                  }
                ]
              ]
            },
            "n8n": {
              "main": [
                [
                  {
                    "node": "Limit1",
                    "type": "main",
                    "index": 0
                  }
                ]
              ]
            },
            "Merge Items": {
              "main": [
                [
                  {
                    "node": "isDiffOrNew",
                    "type": "main",
                    "index": 0
                  }
                ]
              ]
            },
            "isDiffOrNew": {
              "main": [
                [
                  {
                    "node": "Check Status",
                    "type": "main",
                    "index": 0
                  }
                ]
              ]
            },
            "Check Status": {
              "main": [
                [
                  {
                    "node": "Same file - Do nothing",
                    "type": "main",
                    "index": 0
                  }
                ],
                [
                  {
                    "node": "File is different",
                    "type": "main",
                    "index": 0
                  }
                ],
                [
                  {
                    "node": "File is new",
                    "type": "main",
                    "index": 0
                  }
                ]
              ]
            },
            "Same file - Do nothing": {
              "main": [
                [
                  {
                    "node": "Return",
                    "type": "main",
                    "index": 0
                  }
                ]
              ]
            },
            "File is different": {
              "main": [
                [
                  {
                    "node": "Edit existing file",
                    "type": "main",
                    "index": 0
                  }
                ]
              ]
            },
            "File is new": {
              "main": [
                [
                  {
                    "node": "Create new file",
                    "type": "main",
                    "index": 0
                  }
                ]
              ]
            },
            "Create new file": {
              "main": [
                [
                  {
                    "node": "Return",
                    "type": "main",
                    "index": 0
                  }
                ]
              ]
            },
            "Edit existing file": {
              "main": [
                [
                  {
                    "node": "Return",
                    "type": "main",
                    "index": 0
                  }
                ]
              ]
            },
            "Loop Over Items": {
              "main": [
                [
                  {
                    "node": "Send Analysis",
                    "type": "main",
                    "index": 0
                  }
                ],
                [
                  {
                    "node": "Execution Data",
                    "type": "main",
                    "index": 0
                  }
                ]
              ]
            },
            "Schedule Trigger": {
              "main": [
                [
                  {
                    "node": "n8n",
                    "type": "main",
                    "index": 0
                  }
                ]
              ]
            },
            "Get file data": {
              "main": [
                [
                  {
                    "node": "If",
                    "type": "main",
                    "index": 0
                  }
                ]
              ]
            },
            "Execute Workflow Trigger": {
              "main": [
                [
                  {
                    "node": "tag?",
                    "type": "main",
                    "index": 0
                  },
                  {
                    "node": "Merge Items",
                    "type": "main",
                    "index": 1
                  }
                ]
              ]
            },
            "Execute Workflow": {
              "main": [
                [
                  {
                    "node": "Loop Over Items",
                    "type": "main",
                    "index": 0
                  }
                ]
              ]
            },
            "Execution Data": {
              "main": [
                [
                  {
                    "node": "Execute Workflow",
                    "type": "main",
                    "index": 0
                  }
                ]
              ]
            },
            "tag?": {
              "main": [
                [
                  {
                    "node": "/",
                    "type": "main",
                    "index": 0
                  }
                ],
                [
                  {
                    "node": "Globals",
                    "type": "main",
                    "index": 0
                  }
                ]
              ]
            },
            "/": {
              "main": [
                [
                  {
                    "node": "Globals",
                    "type": "main",
                    "index": 0
                  }
                ]
              ]
            },
            "Globals": {
              "main": [
                [
                  {
                    "node": "Get file data",
                    "type": "main",
                    "index": 0
                  }
                ]
              ]
            },
            "Code": {
              "main": [
                [
                  {
                    "node": "Merge Items",
                    "type": "main",
                    "index": 0
                  }
                ]
              ]
            },
            "Get Base64": {
              "main": [
                [
                  {
                    "node": "Code",
                    "type": "main",
                    "index": 0
                  }
                ]
              ]
            },
            "If": {
              "main": [
                [
                  {
                    "node": "Get Base64",
                    "type": "main",
                    "index": 0
                  }
                ],
                [
                  {
                    "node": "Merge Items",
                    "type": "main",
                    "index": 0
                  }
                ]
              ]
            },
            "Limit1": {
              "main": [
                [
                  {
                    "node": "Loop Over Items",
                    "type": "main",
                    "index": 0
                  }
                ]
              ]
            }
          },
          "settings": {
            "executionOrder": "v1"
          },
          "staticData": {
            "node:Schedule Trigger": {
              "recurrenceRules": []
            }
          },
          "meta": {
            "templateCredsSetupCompleted": true
          },
          "pinData": {},
          "versionId": "4bf3ed6a-babc-4a69-a79a-4ce13fb18975",
          "triggerCount": 1,
          "tags": [
            {
              "createdAt": "2025-06-06T03:03:36.526Z",
              "updatedAt": "2025-06-06T03:03:36.526Z",
              "id": "cEbqjcBcfcKDhR6r",
              "name": "n8nbackup"
            }
          ]
        }
      }
    ]
  },
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": {
    "node:Schedule Trigger": {
      "recurrenceRules": []
    }
  },
  "tags": [
    {
      "createdAt": "2025-06-06T03:03:36.526Z",
      "updatedAt": "2025-06-06T03:03:36.526Z",
      "id": "cEbqjcBcfcKDhR6r",
      "name": "n8nbackup"
    }
  ],
  "triggerCount": 1,
  "updatedAt": "2025-06-30T11:50:39.000Z",
  "versionId": "b6607a02-6a9f-4172-aafc-162788a8b25c"
}